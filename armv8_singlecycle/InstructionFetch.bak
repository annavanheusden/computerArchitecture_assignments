//INSTRUCTION FETCH: 



//INSTRUCTION MEMORY 
module rom(address, data_out);

	parameter words = 256; // default number of words
	parameter logwords = 9; // default max address bit (log2(words)+1)
	parameter size = 32; // default number of bits per instruction word
	parameter addr_size = 64; // default address size
	input [size-1:0] address;
	output [size-1:0] data_out;
	reg [size-1:0] memory [0:words-1];
	wire [size-1:0] data_out;
	
	assign data_out = memory[address[logwords:2]];

endmodule

//ADDER
module add(a,b,out);
	
	input [63:0] a, b;
	output [63:0] out;
	wire [63:0] out;
	
	assign out = a + b;
	
endmodule

//MULTIPLEXER 
module mux(in0,in1,control,out);

	input[63:0] in0,in1;
	input control; 
	output reg[63:0] out; 
	
	always@(in0,in1,control, out) begin
		if(control == 0) begin
			out = in0; 
		end 
		else begin	
			out = in1; 
		end 
	end 

endmodule; 

